/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dnspro;

import java.awt.SplashScreen;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author W7
 */
public class DNSPro extends javax.swing.JFrame {

    /**
     * Creates new form DNSProUI
     */
    public DNSPro() {
        // mostra splash screen e 
        SplashScreen.getSplashScreen();
        try {
            Thread.sleep(2000);
        } catch (InterruptedException ex) {
            Logger.getLogger(DNSPro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        initComponents();
        
        // seta o icone da aplicacao
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        
        // seta a posicao da janela ao centro da tela
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelPrincipal = new javax.swing.JPanel();
        campoHost = new javax.swing.JTextField();
        botaoOk = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        rotuloHost = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoIps = new javax.swing.JTextArea();
        rotuloStatus = new javax.swing.JLabel();
        menuPrincipal = new javax.swing.JMenuBar();
        menuDnsPro = new javax.swing.JMenu();
        itemBuscar = new javax.swing.JMenuItem();
        itemSair = new javax.swing.JMenuItem();
        menuSobre = new javax.swing.JMenu();
        itemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DNS Pro - v4.4.1 by Daniel Silva");
        setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        setResizable(false);

        painelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        painelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        painelPrincipal.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N

        campoHost.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        campoHost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                campoHostKeyPressed(evt);
            }
        });

        botaoOk.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoOk.setText("OK");
        botaoOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOkActionPerformed(evt);
            }
        });

        botaoLimpar.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        rotuloHost.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        rotuloHost.setText("Buscar Host");

        campoIps.setEditable(false);
        campoIps.setColumns(20);
        campoIps.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        campoIps.setRows(5);
        campoIps.setFocusable(false);
        jScrollPane1.setViewportView(campoIps);

        javax.swing.GroupLayout painelPrincipalLayout = new javax.swing.GroupLayout(painelPrincipal);
        painelPrincipal.setLayout(painelPrincipalLayout);
        painelPrincipalLayout.setHorizontalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addComponent(rotuloHost)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelPrincipalLayout.createSequentialGroup()
                        .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(painelPrincipalLayout.createSequentialGroup()
                                .addComponent(campoHost, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoOk, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        painelPrincipalLayout.setVerticalGroup(
            painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rotuloHost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoOk)
                    .addComponent(botaoLimpar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                .addContainerGap())
        );

        rotuloStatus.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        rotuloStatus.setText("Pronto");

        menuPrincipal.setName(""); // NOI18N

        menuDnsPro.setText("DNS Pro");

        itemBuscar.setText("Buscar Host");
        itemBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemBuscarActionPerformed(evt);
            }
        });
        menuDnsPro.add(itemBuscar);

        itemSair.setText("Sair");
        itemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSairActionPerformed(evt);
            }
        });
        menuDnsPro.add(itemSair);

        menuPrincipal.add(menuDnsPro);

        menuSobre.setText("Sobre");

        itemSobre.setText("Sobre o DNS Pro");
        itemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSobreActionPerformed(evt);
            }
        });
        menuSobre.add(itemSobre);

        menuPrincipal.add(menuSobre);

        setJMenuBar(menuPrincipal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(rotuloStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(painelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rotuloStatus))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOkActionPerformed
        // inicia cronometro
        long start = System.nanoTime();
        
        // contador de resultados
        int cont = 0;
        
        // altera o status
        rotuloStatus.setText("Buscando...");
        rotuloStatus.paintImmediately(rotuloStatus.getVisibleRect());
        
        // pega data e hora da busca
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date date = new Date();
        
        // limpa o campo dos ips
        campoIps.setText(null);
        // exibe detalhes da busca
        campoIps.append("Busca por: " + campoHost.getText() + " (" + dateFormat.format(date) + ")" + "\n");
       
        // verifica se é um host valido
        try {     
            // exibe os ips dos host
            for(InetAddress address: InetAddress.getAllByName(campoHost.getText())) {
                // System.out.println(address.getHostAddress());
                campoIps.append(address.getHostAddress() + "\n");
                
                cont++;
            }
        } catch (UnknownHostException ex) {
            campoIps.append("Host inválido" + "\n");
            // Logger.getLogger(DNSProUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        // seta o foco no campo de digitacao do host
        campoHost.requestFocus();
        
        // altera o status
        rotuloStatus.setText("Pronto");
        
        // finaliza cronometro
        long end = System.nanoTime();
        long time = (end - start) / 1000000;
        String result = cont == 1 ? cont + " resultado" : cont + " resultados";
        campoIps.append("Concluído: " + result + " (" + time + " ms)");
    }//GEN-LAST:event_botaoOkActionPerformed

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        // limpa os campos
        campoHost.setText(null);
        campoIps.setText(null);
        
        // seta o foco no campo de digitacao do host
        campoHost.requestFocus();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void campoHostKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_campoHostKeyPressed
        // chama o botao OK ao pressionar enter
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            botaoOk.doClick();
        } else
        // chama o botao limpar ao pressionar esc
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            botaoLimpar.doClick();
        }
    }//GEN-LAST:event_campoHostKeyPressed

    private void itemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSobreActionPerformed
        // oculta o painel principal pra mostrar texto sobre o programa
        painelPrincipal.setVisible(false);
        rotuloStatus.setVisible(false);
    }//GEN-LAST:event_itemSobreActionPerformed

    private void itemBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemBuscarActionPerformed
        // mostra o painel principal
        painelPrincipal.setVisible(true);
        rotuloStatus.setVisible(true);
        
        botaoLimpar.doClick();
    }//GEN-LAST:event_itemBuscarActionPerformed

    private void itemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_itemSairActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {       
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DNSPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DNSPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DNSPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DNSPro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DNSPro().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoOk;
    private javax.swing.JTextField campoHost;
    private javax.swing.JTextArea campoIps;
    private javax.swing.JMenuItem itemBuscar;
    private javax.swing.JMenuItem itemSair;
    private javax.swing.JMenuItem itemSobre;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuDnsPro;
    private javax.swing.JMenuBar menuPrincipal;
    private javax.swing.JMenu menuSobre;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JLabel rotuloHost;
    private javax.swing.JLabel rotuloStatus;
    // End of variables declaration//GEN-END:variables
}
